int[][] triTable = {
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, // 0000
  { 1, 8, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, // 0001
  { 2, 5, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, // 0010
  { 1, 8, 6, 2, 5, 6, 0, 0, 0, 0, 0, 0 }, // 0011
  { 3, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, // 0100
  { 1, 8, 5, 3, 6, 7, 0, 0, 0, 0, 0, 0 }, // 0101
  { 2, 5, 6, 3, 6, 7, 0, 0, 0, 0, 0, 0 }, // 0110
  { 2, 5, 3, 3, 5, 8, 4, 3, 8, 0, 0, 0 }, // 0111
  { 4, 7, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, // 1000
  { 1, 4, 5, 4, 7, 5, 0, 0, 0, 0, 0, 0 }, // 1001
  { 1, 8, 5, 3, 6, 7, 0, 0, 0, 0, 0, 0 }, // 1010
  { 1, 4, 5, 3, 6, 4, 4, 6, 5, 0, 0, 0 }, // 1011
  { 1, 8, 2, 2, 8, 6, 0, 0, 0, 0, 0, 0 }, // 1100
  { 1, 7, 6, 2, 1, 6, 4, 7, 1, 0, 0, 0 }, // 1101
  { 1, 8, 2, 2, 8, 7, 3, 2, 7, 0, 0, 0 }, // 1110
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }  // 1111
};

/*
void m() {
  int squareindex = 0;
  if (grid.val[0] < isolevel) sqaureindex |= 1;
  if (grid.val[1] < isolevel) squareindex |= 2;
  if (grid.val[2] < isolevel) squareindex |= 4;
  if (grid.val[3] < isolevel) squareindex |= 8;
}*/
